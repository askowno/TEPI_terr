## Terrestrial Ecosystem Protection Index - South Africa

January 2025

### Background

This script calculates the Terrestrial Ecosystem Protection Index (TEPI) for South Africa. The input data for this index is sourced from a frequency calculation across the stacked rasters of land cover change data (1990-2022), protected areas data time series (annual) and vegetation types (Terr_protection_timeseries

### Load Packages

```{r}
library(tidyverse)
```

### Load input data

```{r}

#Import results of cross tabultion in the outputs folder of the TEPI repo, it is generated by the Qurto script Terr_protection_timeseries.qmd

sa_pa_rall <- read_csv("C:/Rdata/TEPI_terr/outputs/sa_pa_rall.csv", show_col_types = FALSE)

```

### Calculating the Terrestrial Ecosystem Protection Index (TEPI)

```{r}
# Calculate area targets (km2) based on South African biodiversity targets (%) per ecosystem type AND using the GBF 30% target. 
targets <- sa_pa_rall %>%
  filter(YEAR == 2024, T_MAPCODE != "FOa3", T_MAPCODE!= "FOa2") %>% # to simplify table
  group_by(T_MAPCODE, T_CNSRV_TRGT, BIOME) %>%
  summarise(type_tot_km2 = sum(km2),.groups = 'drop') %>%
  mutate(gbf_tar_km2 = 0.3 * type_tot_km2, sa_tar_km2 = T_CNSRV_TRGT/100 * type_tot_km2) 
 
# make biome sums for later use
biome_km2 <- sa_pa_rall %>%
  filter(YEAR == 2023) %>% #select one year to get SA stats for biomes
  group_by(BIOME) %>%
  summarise(biome_extent = sum(km2), .groups = 'drop') %>%
  bind_rows(
    summarise(., BIOME = "TOTAL", biome_extent = sum(biome_extent)))

# Summarise input data to prepare for TEPI analysis - work out extent (km2) protected for each vegetation type  - counting only natural extent and excluding other land cover classes (mines, crops, built etc). The attribute LC has 7 values; 1 = natural; 2-7 are non natural classes (secondary-natural, artificial-waterbody, built-up; cropland; mine; plantation)

km2_pa_veg <- sa_pa_rall %>% 
  filter(LC == 1,  TYPE!= "NOTPA") %>% # 
  group_by(T_MAPCODE, YEAR) %>%
  summarise(tot_pa_km2 = sum(km2),.groups = 'drop') %>% 
  pivot_wider(names_from = YEAR, values_from = tot_pa_km2)

# Join targets to km2_pa_veg (to include types without PA extent) and then adjust to ensure no veg type has pa extent that exceeds the target (this ensures the TEPI tracks PA expansion that contributes to representivity)

 tepi_metrics <- targets %>% 
  left_join(km2_pa_veg, by = "T_MAPCODE") %>% #left join keeps all rows (veg types) inner would select only those with some protection
   mutate(across(matches("^\\d{4}$"), ~replace_na(., 0))) %>% # NB to deal with NAs imediately 
   pivot_longer(cols = matches("^\\d{4}$"), names_to = "year", values_to = "value") %>% #this finds numeric 4 digit col names
   #mutate(test = ifelse(value>sa_tar_km2, "WP", "not WP"))
  mutate(value = pmin(value, sa_tar_km2, na.rm = TRUE)) %>% 
  pivot_wider(names_from = year, values_from = value) 
  
```

```{r}

```

```{r}
# Old methods
# try summarise this 
tepi_sum_biome <- tepi_metrics %>%
  group_by(BIOME) %>%
  summarise(across(`1990`:`2024`, sum), .groups = "drop")

tepi_sum_biome <- tepi_metrics %>%
  group_by(BIOME) %>%
  summarise(across(`1990`: `2024`, sum),.groups = "drop") %>%
  bind_rows(
    summarise(., BIOME = "TOTAL", across(where(is.numeric), sum))
  ) %>%
    left_join(., biome_km2, by = "BIOME") %>%
  relocate(biome_extent, .after = BIOME) %>%
  mutate(`1990` = `1990` / biome_extent) %>%
  mutate(`2000` = `2000` / biome_extent) %>%
  mutate(`2010` = `2010` / biome_extent) %>%
  mutate(`2015` = `2015` / biome_extent) %>%
  mutate(`2018` = `2018` / biome_extent) %>%
  mutate(`2020` = `2020` / biome_extent) %>%
  mutate(`2022` = `2022` / biome_extent) %>%
  mutate(`2023` = `2023` / biome_extent) %>%
  mutate(`2024` = `2024` / biome_extent) %>%
  select(-biome_extent)

#Create a table output for reporting and excel / word use
write_csv(tepi_sum_biome, "outputs/tepi_sum_biome.csv") 

# Make Long for plotting in R
tepi_sum_long <- tepi_sum_biome %>% 
  pivot_longer(cols = `1990`: `2024`, names_to = "YEAR", values_to = "tepi") %>%
    mutate(YEAR = as.numeric(YEAR))
```

### Plot the TEPI results

```{r}
# add biome colours for use in plot: 
biome_colors <- c(
  "Albany Thicket" = "darkgreen",
  "Azonal" = "blue",
  "Desert" = "orange2",
  "Forest" =  "darkblue",
  "Fynbos"  =  "purple",
  "Grassland"  = "green3",
  "IOCB"  = "cyan3",
  "Nama-Karoo" = "brown1",
  "Savanna"  =  "brown",
  "Succulent Karoo"  = "yellow3",
  "Total" = "black"
)
# Plot overall TEP
TEPI_terr_plot_overall <- tepi_sum_long %>%  
  filter(BIOME == "TOTAL") %>%
  ggplot(aes(x=YEAR, y=tepi)) +   
  geom_line() +
    geom_point(size=1) + 
  labs(x= "Year", y = "TEPI")

# plot TEPI  by BIOME
TEPI_terr_plot_biome <- tepi_sum_long %>%  
  filter(BIOME != "NOTVEG", BIOME != "TOTAL") %>%
  ggplot(aes(x=YEAR, y=tepi, color = BIOME)) +   
  geom_line() +
  #ylim(0.3,1) +
  geom_point(size=1) + 
  labs( x= "Year", y = "TEPI") + 
  scale_color_manual(values = biome_colors) +
         theme(
    legend.position = "right",
    legend.text = element_text(size = 5),  # Smaller legend text
    legend.key.size = unit(0.5, "cm"),    # Smaller legend keys
    legend.spacing.x = unit(0.5, "cm"),   # Adjust horizontal spacing between items
    legend.spacing.y = unit(0.2, "cm")    # Adjust vertical spacing between items
  )

#Save the plots to jpeg
ggsave(
  filename = "C:/Rdata/TEPI_terr/outputs/TEPI_terr_plot_biome.jpeg", # File name
  plot = TEPI_terr_plot_biome,                            # Plot object
  device = "jpeg",                        # File format
  width = 10, height = 8, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)
ggsave(
  filename = "C:/Rdata/TEPI_terr/outputs/TEPI_terr_plot_overall.jpeg", # File name
  plot = TEPI_terr_plot_overall,                            # Plot object
  device = "jpeg",                        # File format
  width = 10, height = 8, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)


```

## Terrestrial Ecosystem Protection Index - South Africa

January 2025

### Background

This script calculates the Terrestrial Ecosystem Protection Index (TEPI) for South Africa. The input data for this index is sourced from a cross tabulation between land cover change data (1990-2022), protected areas data time series (annual) and vegetation types described in the EPL_terr script (Ecosystem Protection Level) that serves the National Biodiversity Assessment.

### Load Packages

```{r}
library(tidyverse)
```

### Load input data

```{r}

#Import results of cross tabultion in the outputs folder of the Ecosystem Protection Level assessment for the National Biodiversity Assessment 2025.  Source: EPL_terr repository [https://github.com/askowno/EPL_terr]

sa_pa_rall <- read_csv("C:/Rdata/EPL_terr/outputs/sa_pa_rall.csv", show_col_types = FALSE)

```

### Calculating the Terrestrial Ecosystem Protection Index (TEPI)

```{r}
# Calculate area targets (km2) based on South African biodiversity targets (%) per ecosystem type AND using the GBF 30% target. 

targets <- sa_pa_rall %>%
  filter(YEAR == 2023) %>% # to simplify table
  group_by(T_MAPCODE, BIOME, T_CNSRV_TRGT) %>%
  summarise(type_tot_km2 = sum(km2),.groups = 'drop') %>%
  mutate(gbf_tar_km2 = 0.3 * type_tot_km2, sa_tar_km2 = T_CNSRV_TRGT/100 * type_tot_km2) 
 
biome_km2 <- sa_pa_rall %>%
  filter(YEAR == 2023) %>% #select one year to get SA stats fro biomes
  group_by(BIOME) %>%
  summarise(biome_extent = sum(km2), .groups = 'drop') %>%
  bind_rows(
    summarise(., BIOME = "TOTAL", biome_extent = sum(biome_extent)))
   

# Summarise input data to prepare for TEPI analysis - work out extent (km2) protected for each vegetation type  - counting only natural extent and excluding other land cover classes (mines, crops, built etc). The attribute LC has 7 values; 1 = natural; 2-7 are non natural classes (secondary-natural, artificial-waterbody, built-up; cropland; mine; plantaiton)

km2_sum_veg <- sa_pa_rall %>% 
  filter(LC ==1,  TYPE!= "NOTPA") %>% # 
  group_by(T_MAPCODE, BIOME, YEAR) %>%
  summarise(tot_km2 = sum(km2),.groups = 'drop') %>% 
  pivot_wider(names_from = YEAR, values_from = tot_km2)

# adjust so ensure no veg type has pa extent that exceeds the target (this ensures the TEPI tracks PA expansion that contributes to representivity)
tepi <- targets %>% 
  left_join(km2_sum_veg, by = "T_MAPCODE") %>% #left join keeps all rows (veg types) inner would select only those with some protection
  mutate(`1990` = ifelse(`1990`> sa_tar_km2, sa_tar_km2, `1990`)) %>% 
  mutate(`2000` = ifelse(`2000`> sa_tar_km2, sa_tar_km2, `2000`)) %>% 
  mutate(`2010` = ifelse(`2010`> sa_tar_km2, sa_tar_km2, `2010`)) %>% 
  mutate(`2015` = ifelse(`2015`> sa_tar_km2, sa_tar_km2, `2015`)) %>% 
  mutate(`2018` = ifelse(`2018`> sa_tar_km2, sa_tar_km2, `2018`)) %>% 
  mutate(`2020` = ifelse(`2020`> sa_tar_km2, sa_tar_km2, `2020`)) %>% 
  mutate(`2022` = ifelse(`2022`> sa_tar_km2, sa_tar_km2, `2022`)) %>% 
  mutate(`2023` = ifelse(`2023`> sa_tar_km2, sa_tar_km2, `2023`)) %>% 
  select(-(3:7)) %>%
  rename(BIOME = BIOME.x) %>%
  mutate(across(where(is.numeric), ~replace_na(., 0)))
  
# try summarise this 
tepi_sum_biome <- tepi %>%
  group_by(BIOME) %>%
  summarise(across(`1990`: `2023`, sum)) %>%
  bind_rows(
    summarise(., BIOME = "TOTAL", across(where(is.numeric), sum))
  ) %>%
    left_join(., biome_km2, by = "BIOME") %>%
  relocate(biome_extent, .after = BIOME) %>%
  mutate(`1990` = `1990` / biome_extent) %>%
  mutate(`2000` = `2000` / biome_extent) %>%
  mutate(`2010` = `2010` / biome_extent) %>%
  mutate(`2015` = `2015` / biome_extent) %>%
  mutate(`2018` = `2018` / biome_extent) %>%
  mutate(`2020` = `2020` / biome_extent) %>%
  mutate(`2022` = `2022` / biome_extent) %>%
  mutate(`2023` = `2023` / biome_extent) 

#Create a table output for reporting and excel / word use
write_csv(tepi_sum_biome, "C:/Rdata/TEPI_terr/outputs/tepi_sum_biome.csv") 

# Make Long for plotting in R
tepi_sum_long <- tepi_sum_biome %>% 
  pivot_longer(cols = `1990`: `2023`, names_to = "YEAR", values_to = "tepi") %>%
  mutate(YEAR = as.numeric(YEAR))

```

### Plot the TEPI results

```{r}
# add biome colours for use in plot: 
biome_colors <- c(
  "Albany Thicket" = "darkgreen",
  "Azonal" = "blue",
  "Desert" = "orange2",
  "Forest" =  "darkblue",
  "Fynbos"  =  "purple",
  "Grassland"  = "green3",
  "IOCB"  = "cyan3",
  "Nama-Karoo" = "brown1",
  "Savanna"  =  "brown",
  "Succulent Karoo"  = "yellow3",
  "Total" = "black"
)
# Plot overall TEP
TEPI_terr_plot_overall <- tepi_sum_long %>%  
  filter(BIOME == "TOTAL") %>%
  ggplot(aes(x=YEAR, y=tepi)) +   
  geom_line() +
    geom_point(size=1) + 
  labs(x= "Year", y = "TEPI")

# plot TEPI  by BIOME
TEPI_terr_plot_biome <- tepi_sum_long %>%  
  filter(BIOME != "NOTVEG", BIOME != "TOTAL") %>%
  ggplot(aes(x=YEAR, y=tepi, color = BIOME)) +   
  geom_line() +
  #ylim(0.3,1) +
  geom_point(size=1) + 
  labs( x= "Year", y = "TEPI") + 
  scale_color_manual(values = biome_colors) +
         theme(
    legend.position = "right",
    legend.text = element_text(size = 5),  # Smaller legend text
    legend.key.size = unit(0.5, "cm"),    # Smaller legend keys
    legend.spacing.x = unit(0.5, "cm"),   # Adjust horizontal spacing between items
    legend.spacing.y = unit(0.2, "cm")    # Adjust vertical spacing between items
  )

#Save the plots to jpeg
ggsave(
  filename = "C:/Rdata/TEPI_terr/outputs/TEPI_terr_plot_biome.jpeg", # File name
  plot = TEPI_terr_plot_biome,                            # Plot object
  device = "jpeg",                        # File format
  width = 10, height = 8, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)
ggsave(
  filename = "C:/Rdata/TEPI_terr/outputs/TEPI_terr_plot_overall.jpeg", # File name
  plot = TEPI_terr_plot_overall,                            # Plot object
  device = "jpeg",                        # File format
  width = 10, height = 8, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)


```
